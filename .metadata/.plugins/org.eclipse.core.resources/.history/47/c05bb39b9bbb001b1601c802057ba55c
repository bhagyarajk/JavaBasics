Exception heirarchy
----------------------
1. Throwable 
2. a. Exception b. Error
3. a. Exception --> a.checked and unchecked b. Error --> a.VirtualMachine Error b. AssertionError

 Checked and Unchecked exception : 
 Checked --> these are checked at the compile time and if the exception is of checked type then the user must have to use the throws keyword or the handle the exception, exception propogation is not implicit
 ex. File related exceptions like FileNotFoundException
 
 Unchecked --> these are the exceptions which are checked at the runtime operations, and for these the implicit propagation is possible,
 and in c++ all the exceptions are unchecked and programer need not to bother a lot, but for the systematic way java checked excpetions must be either handled by the programmer or He/She should let the jvm to handle by mentioning the throws keyword
 
 ex. ArithmaticException
 
 **Our Customexceptions should be made checked or unchecked**
 -------------------------------------------------------------